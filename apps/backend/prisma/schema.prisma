generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Auth {
  email      String   @id
  sessionId  String
  name       String
  picture    String
  expiryDate DateTime
  team       Team?
}

model File {
  participant   Participant @relation(fields: [participantId], references: [id])
  participantId Int
  index         Int
  originalName  String      @db.Text
  fileKey       String
  fileType      Int
  uploadDate    DateTime    @default(now())

  @@id([participantId, fileType])
}

model FileHistory {
  id            Int         @id @default(autoincrement())
  participant   Participant @relation(fields: [participantId], references: [id])
  participantId Int
  fileType      Int
  fileKey       String
  uploadDate    DateTime    @default(now())
}

// -------- Personal Information --------

model Team {
  id          Int           @id @default(autoincrement())
  auth        Auth?         @relation(fields: [email], references: [email])
  email       String?       @unique
  name        String?
  school      String?
  isComplete  Boolean?      @default(false)
  Participant Participant[]
}

model Participant {
  id           Int           @id @default(autoincrement())
  team         Team?         @relation(fields: [teamId], references: [id])
  teamId       Int?
  prefixTh     String?
  firstnameTh  String?
  middleNameTh String?
  surnameTh    String?
  prefixEn     String?
  firstnameEn  String?
  middleNameEn String?
  surnameEn    String?
  email        String?
  phoneNumber  String?
  lineId       String?
  isAdvisor    Boolean?      @default(false)
  nickname     String?
  grade        String?
  quote        String?
  foodType     String?
  foodAllergy  String?
  drugAllergy  String?
  disease      String?
  files        File[]
  FileHistory  FileHistory[]
}
